name: Metrics

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:
    branches: [ "main", "master" ]

jobs:
  github-metrics:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    # If you stored METRICS_TOKEN as an ENVIRONMENT secret, uncomment:
    environment:
      name: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Show whether the PAT is actually visible to this job (length only)
      - name: Sanity check secrets visibility
        shell: bash
        run: |
          set -euo pipefail
          len_pat=$(echo -n "${{ secrets.METRICS_TOKEN }}" | wc -c || true)
          len_built_in=$(echo -n "${{ github.token }}" | wc -c || true)
          echo "METRICS_TOKEN length: ${len_pat}"
          echo "github.token length: ${len_built_in}"
          if [ "${len_built_in}" -eq 0 ]; then
            echo "ERROR: github.token is unexpectedly empty" >&2
            exit 1
          fi

      # 2) Resolve which token to use: prefer PAT, else fallback to built-in
      - name: Resolve token
        shell: bash
        run: |
          if [ -n "${{ secrets.METRICS_TOKEN }}" ]; then
            echo "TOKEN_RESOLVED=${{ secrets.METRICS_TOKEN }}" >> "$GITHUB_ENV"
            echo "Using METRICS_TOKEN (PAT)"
          else
            echo "TOKEN_RESOLVED=${{ github.token }}" >> "$GITHUB_ENV"
            echo "Using github.token (fallback)"
          fi

      # 3) Optional: print the token length we will pass (to ensure non-empty)
      - name: Confirm resolved token length
        shell: bash
        run: |
          echo "Resolved token length: $(echo -n "$TOKEN_RESOLVED" | wc -c)"

      # 4) Run the action, passing the resolved token
      - name: Generate GitHub metrics
        uses: radiaku/metrics@master
        with:
          token: ${{ env.TOKEN_RESOLVED }}
          # Example options (customize as you like):
          # user: radiaku
          # template: classic
          # config_timezone: Asia/Jakarta
          # plugin_languages: yes
          # plugin_stargazers: yes
